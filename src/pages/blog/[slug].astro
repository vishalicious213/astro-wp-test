---
import PostLayout from "../../layouts/PostLayout.astro"
import { getAllPosts } from "../../scripts/getAllPosts"
import { getPostTags } from "../../scripts/getPostTags"

export const prerender = true
export async function getStaticPaths() {
    const posts = await getAllPosts()

    return posts.map((post: any) => ({
        params: { slug: post.slug },
        props: { post },
    }))
}

const { post }: { post: any } = Astro.props
const { categoryNames, tagNames } = await getPostTags(post.id)
const pageTitle = post.title.rendered
---
<PostLayout pageTitle={pageTitle}>
    <article>
        <img class="featured-img" src={post.jetpack_featured_media_url} alt={post.title.rendered}>
        <div class="post-details">
            <p class="post-date">{post.date.toString().slice(0,10)}</p>
            <h1 class="post-title">{post.title.rendered}</h1>
        </div>
        <div class="post-content" set:html={post.content.rendered}></div>
        <section class="post-meta">
            <div class="post-meta-detail"><b>Categories:</b></div>
            <div class="post-meta-detail">{categoryNames.map((item: string) => <span class="category-tag">{item}</span>)}</div>
            <div class="post-meta-detail"><b>Tags:</b></div>
            <div class="post-meta-detail">{tagNames.map((item: string) => <span class="category-tag">{item}</span>)}</div>
        </section>
    </article>
</PostLayout>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: Verdana, Geneva, Tahoma, sans-serif;
    }

    article {
        position: relative;
    }

    .featured-img {
        width: 100%;
        height: auto;
        min-height: 75vh;
        object-fit: cover;
    }

    .post-details {
        position: absolute;
        top: 2rem;
        left: 0;
        right: 0;
        color: white;
        background: rgba(0, 0, 0, .3);
        text-transform: uppercase;
        text-align: center;
        padding: 1rem;
        margin: auto;
        max-width: 600px;
    }

    .post-title {
        font-size: 1.75rem;
        font-weight: 500;
    }

    .post-date {
        margin-bottom: .5rem;
    }

    .post-meta {
        padding: 0 1rem;
        width: 90%;
        max-width: 650px;
        margin: 0 auto 5rem;
    }

    .post-meta-detail {
        margin-bottom: .5rem;
    }

    .category-tag {
        display: inline-block;
        background: #AB1226;
        color: white;
        font-size: .75rem;
        padding: .5rem .75rem;
        margin: .1rem .25rem;
        border-radius: .5rem;
    }

/* .POST-CONTENT is injected raw HTML from WP, not scoped with Astro classes */
/* This is why we need :global & a class to target them but not spill out */

    :global(.post-content) {
        margin: 4rem auto 5rem;
        padding: 0 1rem;
        max-width: 800px;
    }

    :global(.wp-block-heading) {
        font-size: 1.75rem;
        text-transform: uppercase;
        font-weight: 500;
    }

    :global(
        .post-content h1,
        .post-content h2,
        .post-content h3,
        .post-content h4,
        .post-content h5
    ) {
        margin: 1rem auto;
        width: 90%;
    }
    :global(.post-content h2) {
        font-size: 1.5rem;
        font-weight: 500;
        text-transform: uppercase;
    }

    :global(.post-content p) {
        margin: 1rem auto;
        font-size: .9rem;
        width: 90%;
    }

    :global(.post-content a) {
        word-wrap: break-word;
        color: #AB1226;
    }

    :global(.post-content code) {
        background: #F2F2F2;
        padding: 0 .25rem;
        word-wrap: break-word;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    }

    :global(.wp-block-code code) {
        display: block;
        background: #F2F2F2;
        padding: 1rem;
        margin: 1rem auto;
        width: 90%;
        text-wrap: wrap;
        word-wrap: break-word;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        font-size: .8rem;
        line-height: 1.5;
    }

    :global(figure) {
        width: 100%;
        margin-left: 0;
    }

    :global(.wp-block-gallery) {
        display: flex;
        flex-wrap: wrap;
        align-items: stretch;
        gap: .5rem;
    }

    :global(.wp-block-gallery figure) {
        margin: 0;
        flex: 0 0 calc(50% - .25rem);
        display: flex;
        justify-content: center;
        align-items: stretch;
    }

    :global(.wp-block-gallery figure img) {
        height: 100%;
        object-fit: cover;
    }

    :global(.wp-block-gallery figure:only-child,
    .wp-block-gallery figure:nth-last-child(1):nth-child(odd)) {
        flex: 0 0 100%;
    }

    :global(.wp-block-image img) {
        display: block;
        width: 100%;
        height: auto;
        object-fit: contain;
    }

    :global(.wp-block-cover img) {
        width: 100%;
        height: 100%;
    }

    :global(.wp-block-list) {
        list-style-type: square;
        width: 90%;
        margin: 0 auto 1rem;
    }

    :global(.wp-block-list li) {
        margin-bottom: .25rem;
        font-size: .9rem;
    }

    :global(.tiled-gallery__row) {
        display: flex;
        gap: .25rem;
        width: 100%;
    }

    :global(.tiled-gallery__item img) {
        width: 100%;
        min-height: 9rem;
        object-fit: cover;
    }

    /* MEDIA QUERIES */

    @media screen and (min-width: 768px) {
        :global(
            .post-content p, 
            .post-content h1, 
            .post-content h2,
            .post-content h3,
            .post-content h4,
            .post-content h5,
            .wp-block-list,
            .wp-block-code code
        ){
            width: 80%;
        }

        .post-meta {
            width: 80%;
        }
    }
</style>